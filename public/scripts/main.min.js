"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var FormHandler = /*#__PURE__*/function () {

  function FormHandler() {_classCallCheck(this, FormHandler);
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(FormHandler, [{ key: "init", value:
    function init() {

    }

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.form = $("#registerForm");
      this.phoneInput = $('#phone');
      this.storeInput = $("#store");
      this.receiptInput = $('#receiptNumber');
      this.dateInput = $('#date');
      this.rulesInput = $('#rule');
      this.termsInput = $('#terms');
      this.ageInput = $('#age');
      this.modal = $("#errorModal");
      this.errorDiv = $(".error-messages");
      this.receiptModal = $('#receiptModal');
      this.formWrapper = $(".form-wrapper");
      this.info = $(".info-wrapper");
      this.closeReceipt = $(".closeModal");
      this.closeReceiptBootstrap = $(".closeModalBootstrap");
      this.receiptModalBootstrap = $('#receiptModalBootstrap');
      this.closeModalForm = $(".close-modal");
      this.messageModal = $("#campaignModal");
      this.registerButton = $('.register-button');
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      var imagesBon = [
      {
        name: 'auchan',
        image: "".concat(absolutePath, "/bonuri/Auchan.png")
      },
      {
        name: 'carrefour',
        image: "".concat(absolutePath, "/bonuri/Carrefour.png")
      }, {
        name: 'cora',
        image: "".concat(absolutePath, "/bonuri/Cora.png")
      },
      {
        name: 'kaufland',
        image: "".concat(absolutePath, "/bonuri/Kaufland.png")
      },
      {
        name: 'mega',
        image: "".concat(absolutePath, "/bonuri/Mega-Image.png")
      },
      {
        name: 'metro',
        image: "".concat(absolutePath, "/bonuri/Metro.png")
      },
      {
        name: 'penny',
        image: "".concat(absolutePath, "/bonuri/Penny.png")
      },
      {
        name: 'profi',
        image: "".concat(absolutePath, "/bonuri/Profi.png")
      },
      {
        name: 'selgros',
        image: "".concat(absolutePath, "/bonuri/Selgros.png")
      },
      {
        name: 'altele',
        image: "".concat(absolutePath, "/bonuri/Auchan.png")
      },
      {
        name: '',
        image: "".concat(absolutePath, "/bonuri/Auchan.png")
      }];


      this.info.on("click", function (e) {
        e.preventDefault();
        self.receiptModal.toggleClass("active");
      });

      this.closeModalForm.on("click", function (e) {
        e.preventDefault();
        self.messageModal.modal("hide");
      });

      this.closeReceipt.on("click", function (e) {
        e.preventDefault();
        self.receiptModal.toggleClass("active");
      });

      this.closeReceiptBootstrap.on("click", function (e) {
        e.preventDefault();
        self.receiptModalBootstrap.modal('hide');
      });

      /**
       * Add custom rules and validate the form
       */
      $.validator.addMethod("digitsonly", function (value, element) {
        return this.optional(element) || /^[0-9]+$/g.test(value);
      }, "");
      $.validator.addMethod("phoneRO", function (phone_number, element) {
        phone_number = phone_number.replace(/\(|\)|\s+|-/g, "");
        return this.optional(element) || phone_number.length > 9 &&
        phone_number.match(/^(?:(?:07\d{2}\S?\d{3}\S?\d{3}|(21|31)\d{1}\S?\d{3}\S?\d{3}|((2|3)[3-7]\d{1})\S?\d{3}\S?\d{3}|(8|9)0\d{1}\S?\d{3}\S?\d{3}))$/);
      }, "");
      $.validator.addMethod("recipeRegex", function (value, element) {
        return this.optional(element) || /^(?![\s-0]*$)\d{1,25}(?:[\s-]\d{1,25})*$/g.test(value);
      }, "");
      $.validator.addMethod("valueNotEquals", function (value, element, arg) {
        return arg !== value;
      }, "");

      // startDate 20 April
      // endDate 31 May
      var campaignMaxDate = null;
      var currentDate = Math.floor(Date.now() / 1000); // Current day
      var endCampaignDate = 1685566799;

      if (currentDate <= endCampaignDate) {
        campaignMaxDate = new Date();
      } else {
        campaignMaxDate = new Date(2023, 5 - 1, 31);
      }

      this.dateInput.datepicker({
        monthNames: ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'], // set month names
        monthNamesShort: ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun', 'Iul', 'Aug', 'Sep', 'Oct', 'Noi', 'Dec'], // set short month names
        dayNames: ['Duminică', 'Luni', 'Marți', 'Miercuri', 'Joi', 'Vineri', 'Sâmbată'], // set days names
        dayNamesShort: ['Dum', 'Lun', 'Mar', 'Mie', 'Joi', 'Vin', 'Sâb'], // set short day names
        dayNamesMin: ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sâ'], // set more short days names
        dateFormat: 'dd/mm/yy',
        // TODO: LIVE
        minDate: new Date(2023, 4 - 1, 20),
        // TODO: STG
        // minDate: new Date(2023, 3 - 1, 1),
        maxDate: campaignMaxDate,
        orientation: 'bottom'
      });

      // console.log(new Date(2023, 4 - 1, 20));
      // console.log(new Date(2023, 5 - 1, 31));
      this.dateInput.on('change', function (e) {
        $(this).valid();
      });

      this.form.validate({
        rules: {
          phone: {
            digitsonly: true,
            required: true,
            minlength: 10,
            maxlength: 10,
            number: true,
            phoneRO: true
          },
          store: {
            required: true
          },
          receiptNumber: {
            required: true,
            maxlength: 25,
            recipeRegex: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          date: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          rule: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          terms: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          age: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          }
        },
        messages: {
          phone: {
            digitsonly: 'Trebuie să introduci un număr de telefon valid.',
            required: 'Numărul de telefon este incomplet.',
            minlength: 'Numărul de telefon este incomplet.',
            maxlength: 'Trebuie să introduci un număr de telefon valid.',
            number: 'Trebuie să introduci un număr de telefon valid.',
            phoneRO: 'Trebuie să introduci un număr de telefon valid.'
          },
          store: {
            required: "Te rugăm să selectezi un magazin"
          },
          receiptNumber: {
            required: 'Trebuie să introduci un numar de bon valid.',
            maxlength: 'Trebuie să introduci un numar de bon valid.',
            recipeRegex: 'Trebuie să introduci un numar de bon valid.'
          },
          date: {
            required: 'Trebuie să introduci data bonului fiscal.'
          },
          rule: {
            required: 'Trebuie să bifezi că ai citit și că ești de acord cu Regulamentul campaniei.'
          },
          terms: {
            required: 'Trebuie să bifezi că ai citit și că ești de acord cu Termenii și condițiile.'
          },
          age: {
            required: 'Trebuie să bifezi că declari că ai peste 18 ani.'
          }
        },
        errorElement: 'div',
        errorPlacement: function errorPlacement(error, element) {
          error.appendTo(self.errorDiv);
        },
        submitHandler: function submitHandler(form, event) {
          event.preventDefault();
          /*ttq.track('SubmitForm');
          gtag_report_conversion();*/

          $.ajax({
            method: "POST",
            url: "/register-campaign",
            data: $("#registerForm").serialize(),
            cache: false,
            beforeSend: function beforeSend() {
              self.formWrapper.addClass("show-loader");
            },
            success: function success(response) {
              if (response.status) {
                self.resetForm();
                self.resetRecaptcha();
              }

              self.messageModal.find(".message__text").html(response.message);
              self.messageModal.modal('show');
            },
            complete: function complete() {
              self.formWrapper.removeClass("show-loader");
            },
            error: function error() {
              self.errorDiv.html('<p>A intervenit o eroare neprevăzută. Te rugăm să încerci din nou mai târziu.</p>');
            }
          });
        }
      });

      this.storeInput.on('change', function () {
        // On select change, switch image for receipt
        var bonImg = $('#receiptModal .receipt-bon');
        // let bonImgModal = $('#receiptModalBootstrap img');
        var option = $(this).val();

        for (var i = 0; i < imagesBon.length; i++) {
          if (option === imagesBon[i].name) {
            bonImg.attr('src', imagesBon[i].image);
            // bonImgModal.attr('src', imagesBon[i].image);
          }
        }
      });

      this.registerButton.on('click tap', function () {
        gtag_report_conversion();
      });

    }

    /**
     * Function of reseting form
     */ }, { key: "resetForm", value:
    function resetForm() {
      this.phoneInput.val('');
      this.storeInput.val('');
      this.receiptInput.val('');
      this.dateInput.val('');
      this.rulesInput.prop('checked', false);
      this.rulesInput.attr('checked', false);
      this.termsInput.prop('checked', false);
      this.termsInput.attr('checked', false);
      this.ageInput.prop('checked', false);
      this.ageInput.attr('checked', false);
    } }, { key: "resetRecaptcha", value:

    /**
     * Function of resetting recaptcha
     */
    function resetRecaptcha() {
      setTimeout(function () {
        // reset captcha
        grecaptcha.reset();
      }, 500);
    } }]);return FormHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var LayoutHandler = /*#__PURE__*/function () {

  function LayoutHandler() {_classCallCheck(this, LayoutHandler);
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(LayoutHandler, [{ key: "init", value:
    function init() {
    }

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.burgerMenu = jQuery('.burger-menu');
      this.overlay = jQuery('.overlay');
      this.body = jQuery('body');
      this.closeCampaignModal = jQuery('.close-modal');
      this.campaignModal = jQuery('.campaign-overlay');
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      this.burgerMenu.on('click', function () {
        self.body.toggleClass('open-menu');
        self.overlay.toggleClass('show');
      });

      this.closeCampaignModal.on('click', function () {
        self.closeCampaignModal.closest(self.campaignModal).modal("hide");
      });
    } }]);return LayoutHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGF5b3V0SGFuZGxlci5qcyIsIm5hbWVzIjpbIkxheW91dEhhbmRsZXIiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbml0IiwiaGFuZGxlRE9NIiwiaGFuZGxlRXZlbnRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJidXJnZXJNZW51IiwialF1ZXJ5Iiwib3ZlcmxheSIsImJvZHkiLCJjbG9zZUNhbXBhaWduTW9kYWwiLCJjYW1wYWlnbk1vZGFsIiwic2VsZiIsIm9uIiwidG9nZ2xlQ2xhc3MiLCJjbG9zZXN0IiwibW9kYWwiXSwic291cmNlcyI6WyJMYXlvdXRIYW5kbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIExheW91dEhhbmRsZXIge1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gICAgdGhpcy5oYW5kbGVET00oKTtcclxuICAgIHRoaXMuaGFuZGxlRXZlbnRzKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEZWNsYXJlIGdsb2JhbCB2YXJpYWJsZXNcclxuICAgKi9cclxuICBpbml0KCkge1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSGFuZGxlIERPTSBxdWVyaWVzXHJcbiAgICovXHJcbiAgaGFuZGxlRE9NKCkge1xyXG4gICAgdGhpcy5idXJnZXJNZW51ID0galF1ZXJ5KCcuYnVyZ2VyLW1lbnUnKTtcclxuICAgIHRoaXMub3ZlcmxheSA9IGpRdWVyeSgnLm92ZXJsYXknKTtcclxuICAgIHRoaXMuYm9keSA9IGpRdWVyeSgnYm9keScpO1xyXG4gICAgdGhpcy5jbG9zZUNhbXBhaWduTW9kYWwgPSBqUXVlcnkoJy5jbG9zZS1tb2RhbCcpO1xyXG4gICAgdGhpcy5jYW1wYWlnbk1vZGFsID0galF1ZXJ5KCcuY2FtcGFpZ24tb3ZlcmxheScpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTGlzdGVuIGZvciBldmVudHNcclxuICAgKi9cclxuICBoYW5kbGVFdmVudHMoKSB7XHJcbiAgICBsZXQgc2VsZiA9IHRoaXM7XHJcblxyXG4gICAgdGhpcy5idXJnZXJNZW51Lm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgc2VsZi5ib2R5LnRvZ2dsZUNsYXNzKCdvcGVuLW1lbnUnKTtcclxuICAgICAgc2VsZi5vdmVybGF5LnRvZ2dsZUNsYXNzKCdzaG93Jyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLmNsb3NlQ2FtcGFpZ25Nb2RhbC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHNlbGYuY2xvc2VDYW1wYWlnbk1vZGFsLmNsb3Nlc3Qoc2VsZi5jYW1wYWlnbk1vZGFsKS5tb2RhbChcImhpZGVcIik7XHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiIwakRBQU1BLGFBQWE7O0VBRWpCLFNBQUFBLGNBQUEsRUFBYyxDQUFBQyxlQUFBLE9BQUFELGFBQUE7SUFDWixJQUFJLENBQUNFLElBQUksQ0FBQyxDQUFDO0lBQ1gsSUFBSSxDQUFDQyxTQUFTLENBQUMsQ0FBQztJQUNoQixJQUFJLENBQUNDLFlBQVksQ0FBQyxDQUFDO0VBQ3JCOztFQUVBO0FBQ0Y7QUFDQSxLQUZFQyxZQUFBLENBQUFMLGFBQUEsS0FBQU0sR0FBQSxVQUFBQyxLQUFBO0lBR0EsU0FBQUwsS0FBQSxFQUFPO0lBQ1A7O0lBRUE7QUFDRjtBQUNBLE9BRkUsTUFBQUksR0FBQSxlQUFBQyxLQUFBO0lBR0EsU0FBQUosVUFBQSxFQUFZO01BQ1YsSUFBSSxDQUFDSyxVQUFVLEdBQUdDLE1BQU0sQ0FBQyxjQUFjLENBQUM7TUFDeEMsSUFBSSxDQUFDQyxPQUFPLEdBQUdELE1BQU0sQ0FBQyxVQUFVLENBQUM7TUFDakMsSUFBSSxDQUFDRSxJQUFJLEdBQUdGLE1BQU0sQ0FBQyxNQUFNLENBQUM7TUFDMUIsSUFBSSxDQUFDRyxrQkFBa0IsR0FBR0gsTUFBTSxDQUFDLGNBQWMsQ0FBQztNQUNoRCxJQUFJLENBQUNJLGFBQWEsR0FBR0osTUFBTSxDQUFDLG1CQUFtQixDQUFDO0lBQ2xEOztJQUVBO0FBQ0Y7QUFDQSxPQUZFLE1BQUFILEdBQUEsa0JBQUFDLEtBQUE7SUFHQSxTQUFBSCxhQUFBLEVBQWU7TUFDYixJQUFJVSxJQUFJLEdBQUcsSUFBSTs7TUFFZixJQUFJLENBQUNOLFVBQVUsQ0FBQ08sRUFBRSxDQUFDLE9BQU8sRUFBRSxZQUFZO1FBQ3RDRCxJQUFJLENBQUNILElBQUksQ0FBQ0ssV0FBVyxDQUFDLFdBQVcsQ0FBQztRQUNsQ0YsSUFBSSxDQUFDSixPQUFPLENBQUNNLFdBQVcsQ0FBQyxNQUFNLENBQUM7TUFDbEMsQ0FBQyxDQUFDOztNQUVGLElBQUksQ0FBQ0osa0JBQWtCLENBQUNHLEVBQUUsQ0FBQyxPQUFPLEVBQUUsWUFBWTtRQUM5Q0QsSUFBSSxDQUFDRixrQkFBa0IsQ0FBQ0ssT0FBTyxDQUFDSCxJQUFJLENBQUNELGFBQWEsQ0FBQyxDQUFDSyxLQUFLLENBQUMsTUFBTSxDQUFDO01BQ25FLENBQUMsQ0FBQztJQUNKLENBQUMsWUFBQWxCLGFBQUEifQ==

"use strict"; // init handlers
var layoutHandler = null;
var formHandler = null;

var initHandlers = function initHandlers() {
  layoutHandler = new LayoutHandler();
  formHandler = new FormHandler();
};

// uncomment this to use jQuery
(function ($) {
  $(document).ready(function () {
    initHandlers();
  });
})(jQuery);


// init handlers using vanilla
// document.addEventListener('DOMContentLoaded', () => { initHandlers(); });
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm5hbWVzIjpbImxheW91dEhhbmRsZXIiLCJmb3JtSGFuZGxlciIsImluaXRIYW5kbGVycyIsIkxheW91dEhhbmRsZXIiLCJGb3JtSGFuZGxlciIsIiQiLCJkb2N1bWVudCIsInJlYWR5IiwialF1ZXJ5Il0sInNvdXJjZXMiOlsibWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbml0IGhhbmRsZXJzXHJcbmxldCBsYXlvdXRIYW5kbGVyID0gbnVsbDtcclxubGV0IGZvcm1IYW5kbGVyID0gbnVsbDtcclxuXHJcbmNvbnN0IGluaXRIYW5kbGVycyA9ICgpID0+IHtcclxuICBsYXlvdXRIYW5kbGVyID0gbmV3IExheW91dEhhbmRsZXIoKTtcclxuICBmb3JtSGFuZGxlciA9IG5ldyBGb3JtSGFuZGxlcigpO1xyXG59O1xyXG5cclxuLy8gdW5jb21tZW50IHRoaXMgdG8gdXNlIGpRdWVyeVxyXG4oKCQpID0+IHtcclxuICAkKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XHJcbiAgICBpbml0SGFuZGxlcnMoKTtcclxuICB9KTtcclxufSkoalF1ZXJ5KTtcclxuXHJcblxyXG4vLyBpbml0IGhhbmRsZXJzIHVzaW5nIHZhbmlsbGFcclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHsgaW5pdEhhbmRsZXJzKCk7IH0pO1xyXG5cclxuIl0sIm1hcHBpbmdzIjoiY0FBQTtBQUNBLElBQUlBLGFBQWEsR0FBRyxJQUFJO0FBQ3hCLElBQUlDLFdBQVcsR0FBRyxJQUFJOztBQUV0QixJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBQSxFQUFTO0VBQ3pCRixhQUFhLEdBQUcsSUFBSUcsYUFBYSxDQUFDLENBQUM7RUFDbkNGLFdBQVcsR0FBRyxJQUFJRyxXQUFXLENBQUMsQ0FBQztBQUNqQyxDQUFDOztBQUVEO0FBQ0EsQ0FBQyxVQUFDQyxDQUFDLEVBQUs7RUFDTkEsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFlBQU07SUFDdEJMLFlBQVksQ0FBQyxDQUFDO0VBQ2hCLENBQUMsQ0FBQztBQUNKLENBQUMsRUFBRU0sTUFBTSxDQUFDOzs7QUFHVjtBQUNBIn0=

//# sourceMappingURL=main.min.js.map
